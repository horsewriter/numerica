---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Panel de Administración - Numérica">
	<div class="admin-page">
		<div class="container">
			<!-- Login Form -->
			<div id="adminLogin" class="admin-login">
				<div class="login-container">
					<div class="auth-card card">
						<div class="card-header">
							<h1 class="auth-title">Panel de Administración</h1>
							<p class="auth-subtitle">Acceso restringido para administradores</p>
						</div>

						<div class="card-body">
							<form id="adminLoginForm" class="auth-form">
								<div class="form-group">
									<label for="username" class="form-label">Usuario</label>
									<input type="text" id="username" name="username" required class="form-input" />
								</div>

								<div class="form-group">
									<label for="password" class="form-label">Contraseña</label>
									<input type="password" id="password" name="password" required class="form-input" />
								</div>

								<button type="submit" class="btn btn-primary" style="width: 100%;" id="loginSubmitBtn">
									Iniciar Sesión
								</button>
							</form>

							<div id="loginMessage" class="alert" style="display: none;"></div>
						</div>

						<div class="card-footer">
							<div class="admin-credentials">
								<small class="credentials-text">
									<strong>Credenciales por defecto:</strong><br>
									Usuario: admin | Contraseña: admin123
								</small>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- Admin Panel -->
			<div id="adminPanel" class="admin-panel" style="display: none;">
				<div class="panel-header">
					<div class="header-content">
						<h1 class="panel-title">Panel de Administración</h1>
						<p class="panel-subtitle">Gestiona las máquinas y subastas de la plataforma</p>
					</div>
					<button class="btn btn-secondary" onclick="adminLogout()">
						<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
							<path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"/>
							<polyline points="16,17 21,12 16,7"/>
							<line x1="21" y1="12" x2="9" y2="12"/>
						</svg>
						Cerrar Sesión
					</button>
				</div>

				<div class="panel-content">
					<div class="panel-grid">
						<!-- Add Machine Section -->
						<div class="panel-section">
							<div class="card">
								<div class="card-header">
									<h2 class="section-title">Agregar Nueva Máquina</h2>
									<p class="section-subtitle">Registra una nueva máquina para subasta</p>
								</div>
								<div class="card-body">
									<form id="addMachineForm" class="machine-form">
										<div class="form-row">
											<div class="form-group">
												<label for="machineName" class="form-label">Nombre de la Máquina</label>
												<input type="text" id="machineName" name="machineName" required class="form-input" />
											</div>
											<div class="form-group">
												<label for="initialPrice" class="form-label">Precio Inicial ($)</label>
												<input type="number" id="initialPrice" name="initialPrice" step="0.01" required class="form-input" />
											</div>
										</div>

										<div class="form-group">
											<label for="machineDescription" class="form-label">Descripción</label>
											<textarea id="machineDescription" name="machineDescription" rows="3" class="form-input form-textarea" placeholder="Describe las características y especificaciones de la máquina..."></textarea>
										</div>

										<div class="form-group">
											<label for="machineImage" class="form-label">Imagen</label>
											<select id="machineImage" name="machineImage" class="form-input form-select">
												<option value="/images/machining_center_1.jpg">Centro de Maquinado 1</option>
												<option value="/images/machining_center_2.jpg">Centro de Maquinado 2</option>
												<option value="/images/cnc_lathe_1.jpg">Torno CNC</option>
												<option value="/images/milling_machine_1.jpg">Fresadora</option>
											</select>
										</div>

										<button type="submit" class="btn btn-primary" id="addMachineBtn">
											<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
												<line x1="12" y1="5" x2="12" y2="19"/>
												<line x1="5" y1="12" x2="19" y2="12"/>
											</svg>
											Agregar Máquina
										</button>
									</form>

									<div id="machineMessage" class="alert" style="display: none;"></div>
								</div>
							</div>
						</div>

						<!-- Machines List Section -->
						<div class="panel-section">
							<div class="card">
								<div class="card-header">
									<div class="section-header-with-actions">
										<div>
											<h2 class="section-title">Máquinas Activas</h2>
											<p class="section-subtitle">Lista de máquinas disponibles en subasta</p>
										</div>
										<button class="btn btn-outline btn-sm" onclick="loadMachines()">
											<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
												<path d="M23 4v6h-6"/>
												<path d="M1 20v-6h6"/>
												<path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"/>
											</svg>
											Actualizar
										</button>
									</div>
								</div>
								<div class="card-body">
									<div id="machinesList" class="machines-list">
										<div class="loading-state">
											<div class="spinner"></div>
											<p>Cargando máquinas...</p>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</Layout>

<style>
	.admin-page {
		min-height: calc(100vh - 140px);
		padding: 2rem 0;
		background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
	}

	.admin-login {
		display: flex;
		align-items: center;
		justify-content: center;
		min-height: calc(100vh - 200px);
	}

	.login-container {
		width: 100%;
		max-width: 450px;
	}

	.auth-title {
		font-size: 1.875rem;
		font-weight: 700;
		color: var(--gray-900);
		margin-bottom: 0.5rem;
		text-align: center;
	}

	.auth-subtitle {
		color: var(--gray-600);
		text-align: center;
		margin: 0;
	}

	.auth-form {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	.admin-credentials {
		text-align: center;
		padding: 1rem;
		background: var(--gray-50);
		border-radius: var(--border-radius);
		border: 1px solid var(--gray-200);
	}

	.credentials-text {
		color: var(--gray-600);
		font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
		line-height: 1.4;
	}

	.panel-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 2rem;
		padding: 2rem;
		background: white;
		border-radius: var(--border-radius-lg);
		box-shadow: var(--shadow-sm);
		border: 1px solid var(--gray-200);
	}

	.header-content h1 {
		font-size: 2rem;
		font-weight: 700;
		color: var(--gray-900);
		margin-bottom: 0.25rem;
	}

	.header-content p {
		color: var(--gray-600);
		margin: 0;
	}

	.panel-content {
		max-width: 1200px;
		margin: 0 auto;
	}

	.panel-grid {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 2rem;
	}

	.panel-section {
		display: flex;
		flex-direction: column;
	}

	.section-title {
		font-size: 1.25rem;
		font-weight: 600;
		color: var(--gray-900);
		margin-bottom: 0.25rem;
	}

	.section-subtitle {
		color: var(--gray-600);
		font-size: 0.875rem;
		margin: 0;
	}

	.section-header-with-actions {
		display: flex;
		justify-content: space-between;
		align-items: flex-start;
	}

	.machine-form {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 1rem;
	}

	.machines-list {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		max-height: 600px;
		overflow-y: auto;
	}

	.machine-card {
		background: var(--gray-50);
		border: 1px solid var(--gray-200);
		border-radius: var(--border-radius);
		padding: 1.5rem;
		transition: background-color 0.2s ease;
	}

	.machine-card:hover {
		background: white;
	}

	.machine-card h3 {
		font-size: 1.125rem;
		font-weight: 600;
		color: var(--gray-900);
		margin-bottom: 0.5rem;
	}

	.machine-card p {
		color: var(--gray-600);
		margin-bottom: 0.5rem;
		font-size: 0.875rem;
	}

	.machine-prices {
		display: flex;
		justify-content: space-between;
		margin-top: 1rem;
		padding-top: 1rem;
		border-top: 1px solid var(--gray-200);
	}

	.price-info {
		text-align: center;
	}

	.price-label {
		font-size: 0.75rem;
		color: var(--gray-500);
		margin-bottom: 0.25rem;
		text-transform: uppercase;
		letter-spacing: 0.05em;
	}

	.price-value {
		font-size: 1.125rem;
		font-weight: 700;
		color: var(--primary-color);
	}

	.machine-status {
		display: inline-flex;
		align-items: center;
		padding: 0.25rem 0.75rem;
		border-radius: 9999px;
		font-size: 0.75rem;
		font-weight: 500;
		text-transform: uppercase;
		letter-spacing: 0.05em;
	}

	.status-active {
		background: rgb(16 185 129 / 0.1);
		color: rgb(5 150 105);
	}

	.loading-state {
		text-align: center;
		padding: 3rem 1rem;
		color: var(--gray-500);
	}

	.loading-state .spinner {
		width: 32px;
		height: 32px;
		margin: 0 auto 1rem;
	}

	@media (max-width: 768px) {
		.panel-header {
			flex-direction: column;
			gap: 1rem;
			text-align: center;
		}

		.panel-grid {
			grid-template-columns: 1fr;
		}

		.form-row {
			grid-template-columns: 1fr;
		}

		.section-header-with-actions {
			flex-direction: column;
			gap: 1rem;
			align-items: stretch;
		}
	}
</style>

<script>
	let adminToken = null;

	// Check if admin is logged in
	function checkAdminAuth() {
		adminToken = localStorage.getItem('adminToken');
		if (adminToken) {
			showAdminPanel();
			loadMachines();
		}
	}

	// Handle admin login
	document.getElementById('adminLoginForm').addEventListener('submit', async (e) => {
		e.preventDefault();
		
		const submitBtn = document.getElementById('loginSubmitBtn');
		const messageDiv = document.getElementById('loginMessage');
		
		const formData = new FormData(e.target);
		const username = formData.get('username');
		const password = formData.get('password');

		submitBtn.disabled = true;
		submitBtn.textContent = 'Iniciando sesión...';
		messageDiv.style.display = 'none';

		try {
			const response = await fetch('/api/admin/login', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({ username, password }),
			});

			const data = await response.json();

			if (data.success) {
				localStorage.setItem('adminToken', data.token);
				adminToken = data.token;
				showMessage('loginMessage', 'Acceso concedido. Cargando panel...', 'success');
				setTimeout(() => {
					showAdminPanel();
					loadMachines();
				}, 1000);
			} else {
				showMessage('loginMessage', data.error || 'Credenciales inválidas', 'error');
			}
		} catch (error) {
			showMessage('loginMessage', 'Error de conexión. Intenta nuevamente.', 'error');
		} finally {
			submitBtn.disabled = false;
			submitBtn.textContent = 'Iniciar Sesión';
		}
	});

	// Show admin panel
	function showAdminPanel() {
		document.getElementById('adminLogin').style.display = 'none';
		document.getElementById('adminPanel').style.display = 'block';
	}

	// Admin logout
	function adminLogout() {
		localStorage.removeItem('adminToken');
		adminToken = null;
		document.getElementById('adminLogin').style.display = 'block';
		document.getElementById('adminPanel').style.display = 'none';
		
		// Clear forms
		document.getElementById('adminLoginForm').reset();
		document.getElementById('addMachineForm').reset();
	}

	// Handle add machine form
	document.getElementById('addMachineForm').addEventListener('submit', async (e) => {
		e.preventDefault();
		
		const submitBtn = document.getElementById('addMachineBtn');
		const messageDiv = document.getElementById('machineMessage');
		
		const formData = new FormData(e.target);
		const machineData = {
			name: formData.get('machineName'),
			description: formData.get('machineDescription'),
			image_url: formData.get('machineImage'),
			initial_price: parseFloat(formData.get('initialPrice'))
		};

		submitBtn.disabled = true;
		submitBtn.innerHTML = '<div class="spinner" style="width: 16px; height: 16px;"></div> Agregando...';
		messageDiv.style.display = 'none';

		try {
			const response = await fetch('/api/machines', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'Authorization': `Bearer ${adminToken}`
				},
				body: JSON.stringify(machineData),
			});

			const data = await response.json();

			if (data.success) {
				showMessage('machineMessage', 'Máquina agregada exitosamente', 'success');
				e.target.reset();
				loadMachines(); // Reload machines list
			} else {
				showMessage('machineMessage', data.error || 'Error al agregar la máquina', 'error');
			}
		} catch (error) {
			showMessage('machineMessage', 'Error de conexión. Intenta nuevamente.', 'error');
		} finally {
			submitBtn.disabled = false;
			submitBtn.innerHTML = `
				<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
					<line x1="12" y1="5" x2="12" y2="19"/>
					<line x1="5" y1="12" x2="19" y2="12"/>
				</svg>
				Agregar Máquina
			`;
		}
	});

	// Load machines
	async function loadMachines() {
		const listContainer = document.getElementById('machinesList');
		
		try {
			listContainer.innerHTML = `
				<div class="loading-state">
					<div class="spinner"></div>
					<p>Cargando máquinas...</p>
				</div>
			`;

			const response = await fetch('/api/machines');
			const data = await response.json();

			if (data.success) {
				displayMachines(data.machines);
			} else {
				showMachinesError('Error al cargar las máquinas');
			}
		} catch (error) {
			showMachinesError('Error de conexión');
		}
	}

	// Display machines
	function displayMachines(machines) {
		const list = document.getElementById('machinesList');
		
		if (machines.length === 0) {
			list.innerHTML = `
				<div class="loading-state">
					<p>No hay máquinas registradas.</p>
				</div>
			`;
			return;
		}

		list.innerHTML = machines.map(machine => `
			<div class="machine-card">
				<div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 0.5rem;">
					<h3>${machine.name}</h3>
					<span class="machine-status status-${machine.status}">
						${machine.status === 'active' ? 'Activa' : 'Inactiva'}
					</span>
				</div>
				<p>${machine.description || 'Sin descripción disponible'}</p>
				<div class="machine-prices">
					<div class="price-info">
						<div class="price-label">Precio inicial</div>
						<div class="price-value">$${parseFloat(machine.initial_price).toLocaleString()}</div>
					</div>
					<div class="price-info">
						<div class="price-label">Precio actual</div>
						<div class="price-value">$${parseFloat(machine.current_price).toLocaleString()}</div>
					</div>
				</div>
			</div>
		`).join('');
	}

	function showMachinesError(message) {
		const list = document.getElementById('machinesList');
		list.innerHTML = `
			<div class="loading-state">
				<p style="color: var(--error-color);">${message}</p>
			</div>
		`;
	}

	function showMessage(elementId, text, type) {
		const messageDiv = document.getElementById(elementId);
		messageDiv.textContent = text;
		messageDiv.className = `alert alert-${type}`;
		messageDiv.style.display = 'block';
	}

	// Make functions global
	window.adminLogout = adminLogout;
	window.loadMachines = loadMachines;

	// Check auth on page load
	document.addEventListener('DOMContentLoaded', checkAdminAuth);
</script>